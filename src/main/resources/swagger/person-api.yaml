swagger: "2.0"
info:
  description: |
    This is a demo for swagger codegen and spring boot application.
  version: "1.0.0"
  title: Swagger Spring Boot contract-first
host: swaggerspringboot.girisb.com
basePath: /
schemes:
  - http
paths:
  /persons:
    get:
      tags:
        - "persons"
      summary: "List all available persons."
      operationId: "getAllPersons"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Person"
    put:
      tags:
        - "persons"
      summary: "Updates a person"
      operationId: "updatePerson"
      consumes:
        - "application/json"
      parameters:
        - name: "person"
          in: "body"
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        200:
          description: "Successful operation"
    post:
      tags:
        - "persons"
      summary: "Create a new person"
      operationId: "createPerson"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "person"
          in: "body"
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/Person'
  /persons/{id}:
    get:
      tags:
        - "persons"
      summary: "fetches a person by its id"
      operationId: "findPersonById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          type: "integer"
          in: "path"
          required: true
          description: "The id of the person"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/Person'
        404:
          description: "Person not found"
    delete:
      tags:
        - "persons"
      summary: "Deletes a person"
      operationId: "deletePerson"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          type: "integer"
          in: "path"
          required: true
          description: "The id of the person"
      responses:
        200:
          description: "Successful operation"
        404:
          description: "Person not found"


definitions:
  Person:
    type: object
    properties:
      id:
        type: integer
        description: "id of the user"
      firstname:
        type: string
        description: "firstname of the user"
      lastname:
        type: string
        description: "lastname of the user"
      age:
        type: integer
        description: "age of the user"